package api

import (
        //"bitbucket.org/leanalpha/qunizserver/models"
        "github.com/codegangsta/martini"
        "github.com/eaigner/hood"
)

// Performs routing related to <no value>s. 
// The meat is in the respective functions in this file
func <no value>Route(r martini.Router) {

        r.Get("/<no value>s", <no value>Index)

        r.Get("/<no value>s/:id", <no value>Show)

        r.Put("/<no value>s/:id", <no value>Update)
        r.Patch("/<no value>s/:id", <no value>Update)

        r.Post("/<no value>s", <no value>Create)

        r.Delete("/<no value>s/:id", <no value>Destroy)
}

// GET /<no value>s
//
// List all <no value>s
//
// Returns
// Except if
func <no value>Index (db *hood.Hood) (int,string){
        return 501, "Not implemented"
}

// GET /<no value>s/:id
//
// Show one <no value>s
//
// Returns
// Except if
func <no value>Show (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// PUT /<no value>s/:id
// PATCH /<no value>s/:id
//
// Update <no value> with id :id
//
// Returns
// Except if
func <no value>Update (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// POST /<no value>s
//
// Create a new <no value>
//
// Returns
// Except if
func <no value>Create (db *hood.Hood, params martini.Params) (int,string){
        return 501, "Not implemented"
}


// DELETE /<no value>s
//
// Delete an exciting <no value>
//
// Returns
// Except if
func <no value>Destroy (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}
package api

import (
        //"bitbucket.org/leanalpha/qunizserver/models"
        "github.com/codegangsta/martini"
        "github.com/eaigner/hood"
)

// Performs routing related to <no value>s. 
// The meat is in the respective functions in this file
func <no value>Route(r martini.Router) {

        r.Get("/<no value>s", <no value>Index)

        r.Get("/<no value>s/:id", <no value>Show)

        r.Put("/<no value>s/:id", <no value>Update)
        r.Patch("/<no value>s/:id", <no value>Update)

        r.Post("/<no value>s", <no value>Create)

        r.Delete("/<no value>s/:id", <no value>Destroy)
}

// GET /<no value>s
//
// List all <no value>s
//
// Returns
// Except if
func <no value>Index (db *hood.Hood) (int,string){
        return 501, "Not implemented"
}

// GET /<no value>s/:id
//
// Show one <no value>s
//
// Returns
// Except if
func <no value>Show (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// PUT /<no value>s/:id
// PATCH /<no value>s/:id
//
// Update <no value> with id :id
//
// Returns
// Except if
func <no value>Update (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// POST /<no value>s
//
// Create a new <no value>
//
// Returns
// Except if
func <no value>Create (db *hood.Hood, params martini.Params) (int,string){
        return 501, "Not implemented"
}


// DELETE /<no value>s
//
// Delete an exciting <no value>
//
// Returns
// Except if
func <no value>Destroy (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}
package api

import (
        //"bitbucket.org/leanalpha/qunizserver/models"
        "github.com/codegangsta/martini"
        "github.com/eaigner/hood"
)

// Performs routing related to <no value>s. 
// The meat is in the respective functions in this file
func <no value>Route(r martini.Router) {

        r.Get("/<no value>s", <no value>Index)

        r.Get("/<no value>s/:id", <no value>Show)

        r.Put("/<no value>s/:id", <no value>Update)
        r.Patch("/<no value>s/:id", <no value>Update)

        r.Post("/<no value>s", <no value>Create)

        r.Delete("/<no value>s/:id", <no value>Destroy)
}

// GET /<no value>s
//
// List all <no value>s
//
// Returns
// Except if
func <no value>Index (db *hood.Hood) (int,string){
        return 501, "Not implemented"
}

// GET /<no value>s/:id
//
// Show one <no value>s
//
// Returns
// Except if
func <no value>Show (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// PUT /<no value>s/:id
// PATCH /<no value>s/:id
//
// Update <no value> with id :id
//
// Returns
// Except if
func <no value>Update (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// POST /<no value>s
//
// Create a new <no value>
//
// Returns
// Except if
func <no value>Create (db *hood.Hood, params martini.Params) (int,string){
        return 501, "Not implemented"
}


// DELETE /<no value>s
//
// Delete an exciting <no value>
//
// Returns
// Except if
func <no value>Destroy (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}
package api

import (
        //"bitbucket.org/leanalpha/qunizserver/models"
        "github.com/codegangsta/martini"
        "github.com/eaigner/hood"
)

// Performs routing related to <no value>s. 
// The meat is in the respective functions in this file
func <no value>Route(r martini.Router) {

        r.Get("/<no value>s", <no value>Index)

        r.Get("/<no value>s/:id", <no value>Show)

        r.Put("/<no value>s/:id", <no value>Update)
        r.Patch("/<no value>s/:id", <no value>Update)

        r.Post("/<no value>s", <no value>Create)

        r.Delete("/<no value>s/:id", <no value>Destroy)
}

// GET /<no value>s
//
// List all <no value>s
//
// Returns
// Except if
func <no value>Index (db *hood.Hood) (int,string){
        return 501, "Not implemented"
}

// GET /<no value>s/:id
//
// Show one <no value>s
//
// Returns
// Except if
func <no value>Show (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// PUT /<no value>s/:id
// PATCH /<no value>s/:id
//
// Update <no value> with id :id
//
// Returns
// Except if
func <no value>Update (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// POST /<no value>s
//
// Create a new <no value>
//
// Returns
// Except if
func <no value>Create (db *hood.Hood, params martini.Params) (int,string){
        return 501, "Not implemented"
}


// DELETE /<no value>s
//
// Delete an exciting <no value>
//
// Returns
// Except if
func <no value>Destroy (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}
package api

import (
        //"bitbucket.org/leanalpha/qunizserver/models"
        "github.com/codegangsta/martini"
        "github.com/eaigner/hood"
)

// Performs routing related to <no value>s. 
// The meat is in the respective functions in this file
func <no value>Route(r martini.Router) {

        r.Get("/<no value>s", <no value>Index)

        r.Get("/<no value>s/:id", <no value>Show)

        r.Put("/<no value>s/:id", <no value>Update)
        r.Patch("/<no value>s/:id", <no value>Update)

        r.Post("/<no value>s", <no value>Create)

        r.Delete("/<no value>s/:id", <no value>Destroy)
}

// GET /<no value>s
//
// List all <no value>s
//
// Returns
// Except if
func <no value>Index (db *hood.Hood) (int,string){
        return 501, "Not implemented"
}

// GET /<no value>s/:id
//
// Show one <no value>s
//
// Returns
// Except if
func <no value>Show (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// PUT /<no value>s/:id
// PATCH /<no value>s/:id
//
// Update <no value> with id :id
//
// Returns
// Except if
func <no value>Update (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// POST /<no value>s
//
// Create a new <no value>
//
// Returns
// Except if
func <no value>Create (db *hood.Hood, params martini.Params) (int,string){
        return 501, "Not implemented"
}


// DELETE /<no value>s
//
// Delete an exciting <no value>
//
// Returns
// Except if
func <no value>Destroy (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}
package api

import (
        //"bitbucket.org/leanalpha/qunizserver/models"
        "github.com/codegangsta/martini"
        "github.com/eaigner/hood"
)

// Performs routing related to <no value>s. 
// The meat is in the respective functions in this file
func <no value>Route(r martini.Router) {

        r.Get("/<no value>s", <no value>Index)

        r.Get("/<no value>s/:id", <no value>Show)

        r.Put("/<no value>s/:id", <no value>Update)
        r.Patch("/<no value>s/:id", <no value>Update)

        r.Post("/<no value>s", <no value>Create)

        r.Delete("/<no value>s/:id", <no value>Destroy)
}

// GET /<no value>s
//
// List all <no value>s
//
// Returns
// Except if
func <no value>Index (db *hood.Hood) (int,string){
        return 501, "Not implemented"
}

// GET /<no value>s/:id
//
// Show one <no value>s
//
// Returns
// Except if
func <no value>Show (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// PUT /<no value>s/:id
// PATCH /<no value>s/:id
//
// Update <no value> with id :id
//
// Returns
// Except if
func <no value>Update (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// POST /<no value>s
//
// Create a new <no value>
//
// Returns
// Except if
func <no value>Create (db *hood.Hood, params martini.Params) (int,string){
        return 501, "Not implemented"
}


// DELETE /<no value>s
//
// Delete an exciting <no value>
//
// Returns
// Except if
func <no value>Destroy (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}
package api

import (
        //"bitbucket.org/leanalpha/qunizserver/models"
        "github.com/codegangsta/martini"
        "github.com/eaigner/hood"
)

// Performs routing related to <no value>s. 
// The meat is in the respective functions in this file
func <no value>Route(r martini.Router) {

        r.Get("/<no value>s", <no value>Index)

        r.Get("/<no value>s/:id", <no value>Show)

        r.Put("/<no value>s/:id", <no value>Update)
        r.Patch("/<no value>s/:id", <no value>Update)

        r.Post("/<no value>s", <no value>Create)

        r.Delete("/<no value>s/:id", <no value>Destroy)
}

// GET /<no value>s
//
// List all <no value>s
//
// Returns
// Except if
func <no value>Index (db *hood.Hood) (int,string){
        return 501, "Not implemented"
}

// GET /<no value>s/:id
//
// Show one <no value>s
//
// Returns
// Except if
func <no value>Show (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// PUT /<no value>s/:id
// PATCH /<no value>s/:id
//
// Update <no value> with id :id
//
// Returns
// Except if
func <no value>Update (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// POST /<no value>s
//
// Create a new <no value>
//
// Returns
// Except if
func <no value>Create (db *hood.Hood, params martini.Params) (int,string){
        return 501, "Not implemented"
}


// DELETE /<no value>s
//
// Delete an exciting <no value>
//
// Returns
// Except if
func <no value>Destroy (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}
package api

import (
        //"bitbucket.org/leanalpha/qunizserver/models"
        "github.com/codegangsta/martini"
        "github.com/eaigner/hood"
)

// Performs routing related to <no value>s. 
// The meat is in the respective functions in this file
func <no value>Route(r martini.Router) {

        r.Get("/<no value>s", <no value>Index)

        r.Get("/<no value>s/:id", <no value>Show)

        r.Put("/<no value>s/:id", <no value>Update)
        r.Patch("/<no value>s/:id", <no value>Update)

        r.Post("/<no value>s", <no value>Create)

        r.Delete("/<no value>s/:id", <no value>Destroy)
}

// GET /<no value>s
//
// List all <no value>s
//
// Returns
// Except if
func <no value>Index (db *hood.Hood) (int,string){
        return 501, "Not implemented"
}

// GET /<no value>s/:id
//
// Show one <no value>s
//
// Returns
// Except if
func <no value>Show (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// PUT /<no value>s/:id
// PATCH /<no value>s/:id
//
// Update <no value> with id :id
//
// Returns
// Except if
func <no value>Update (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}

// POST /<no value>s
//
// Create a new <no value>
//
// Returns
// Except if
func <no value>Create (db *hood.Hood, params martini.Params) (int,string){
        return 501, "Not implemented"
}


// DELETE /<no value>s
//
// Delete an exciting <no value>
//
// Returns
// Except if
func <no value>Destroy (db *hood.Hood, params martini.Params) (int,string){
        //id := params["id"]
        return 501, "Not implemented"
}
